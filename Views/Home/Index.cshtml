@page

<style>
    .monsters 
    , .items{
        border: 1px solid black;
        padding: 1em;
        margin: 1em;
    }

    .panel3 {
        display:inline-block;
        width: 400px;
    }

    .item.equippable:hover {
        color: white;
        background: black;
    }

    .itemPendingServerUpdate { 
        color: #666;
        background: #eee;
    }

</style>

<div id="app">
    <div v-if="!gameState.isLoaded" class="loading">
        Loading...
    </div>
    <div v-if="gameState.isLoaded">
        <div class="panel3">
            game log:
            <textarea rows="20" cols="50" readonly class="messages">
                {{ uiState.logMessages }}
            </textarea>

            <div>
                money: {{ playerState.money }}
            </div>

            <div>
                digging: {{ digState.hasDigState && !digState.isPaused }}
                <div v-if="digState.hasDigState">
                    <div>

                    depth: {{ digState.depth }}
                        </div>
                    fuel: {{ digState.fuel }}
                </div>
            </div>

            <button v-if="!digState.hasDigState || digState.isPaused" v-on:click="startDigging">start dig</button>
            <button v-if="digState.hasDigState && !digState.isPaused" v-on:click="stopDigging">stop dig</button>
        </div>
        <div class="panel3">
            <div class="monsters">
                nearby monsters: 
                <br>
                <div v-for="monster in digState.nearbyMonsters">
                    {{ monster.name }} ({{ monster.currentHealth }} / {{ monster.maxHealth }})
                </div>
            </div>
        </div>
        <div class="panel3">
            <div class="items">
                items:
                <br>
                equipped:
                <hr/>
                <div v-for="playerItem in itemState" v-if="playerItem.isEquipped">
                    <div v-if="playerItem.isPendingServerUpdate" class="item itemPendingServerUpdate">
                        {{ playerItem.name }}
                    </div>
                    <div v-if="!playerItem.IsPendingServerUpdate && playerItem.itemSlotId <= 1" class="item">
                        {{ playerItem.name }}
                    </div>
                    <div v-if="!playerItem.isPendingServerUpdate && playerItem.itemSlotId > 1" v-on:click="unequipItem(playerItem.playerItemId)" class="item equippable">
                        {{ playerItem.name }}
                    </div>
                </div>
                <hr/>

                <div v-for="playerItem in itemState" v-if="!playerItem.isEquipped">
                    <div v-if="playerItem.isPendingServerUpdate" class="item itemPendingServerUpdate">
                        {{ playerItem.name }}
                    </div>

                    <div v-if="!playerItem.IsPendingServerUpdate && playerItem.itemSlotId <= 1" class="item">
                        {{ playerItem.name }}
                    </div>
                    <div v-if="!playerItem.isPendingServerUpdate && playerItem.itemSlotId > 1" v-on:click="equipItem(playerItem.playerItemId)" class="item equippable">
                        {{ playerItem.name }}
                    </div>
                </div>
            </div>
        </div>

        <br/>

    </div>
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/js/vue.js"></script>
<script src="~/js/vue-app.js"></script>